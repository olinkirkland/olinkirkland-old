{
    "version": "https://jsonfeed.org/version/1",
    "title": "Olin Kirkland",
    "description": "",
    "home_page_url": "https://olinkirk.land",
    "feed_url": "https://olinkirk.land/feed.json",
    "user_comment": "",
    "author": {
        "name": "Olin Kirkland"
    },
    "items": [
        {
            "id": "https://olinkirk.land/polaris-saved-games-2/",
            "url": "https://olinkirk.land/polaris-saved-games-2/",
            "title": "Saving the Game II",
            "summary": "Expanding on the progress from Keeping Track of Saved Games, I've finished up with the basic game-state loading/saving for Polaris.",
            "content_html": "<p>Expanding on the progress from <a href=\"https://olinkirk.land/polaris-saved-games/\">Keeping Track of Saved Games</a>, I've finished up with the basic game-state loading/saving for Polaris. I added a game screen with an in-game menu that allows for quick-saves and manual saves. There's also more save information displayed on the home and loading pages.</p>\n<pre><code>{<br>  \"characterName\": \"Morrigan,<br>  \"name\": \"Auto-save\",</code><br><code>  \"time\": 1634235074877</code><br><code>}</code></pre>\n<p>My next step is going to be to i<em>m</em>plement game locations (and the ability to travel to them), characters, conversations, and quest progression.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/33/gallery/adl_2dVaQQ7FHy.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/33/gallery/adl_2dVaQQ7FHy-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/33/gallery/adl_JvePFnSpKk.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/33/gallery/adl_JvePFnSpKk-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/33/gallery/adl_v3um2xJJKz.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/33/gallery/adl_v3um2xJJKz-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/33/gallery/adl_muU5iG73Ln.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/33/gallery/adl_muU5iG73Ln-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/33/chrome_E5dYaavlOh.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Polaris",
                   "Blog"
            ],
            "date_published": "2021-10-14T20:07:51+02:00",
            "date_modified": "2021-10-14T21:17:43+02:00"
        },
        {
            "id": "https://olinkirk.land/polaris-saved-games/",
            "url": "https://olinkirk.land/polaris-saved-games/",
            "title": "Saving the Game",
            "summary": "For Polaris, I've decided to take the game development in little bite sized pieces and use the same approach to&hellip;",
            "content_html": "<p>For Polaris, I've decided to take the game development in little bite sized pieces and use the same approach to development and design of the game as I did for Worldmaker: Modular pieces that can be expanded later.</p>\n<p>I chose to start with something pretty boring but important: Saved game management.</p>\n<p>I've kept myself from creating a new Polaris project just yet, and am trying to keep the project generic for now, which means functionality over form in every aspect.</p>\n<ul>\n<li>No skinning UI elements</li>\n<li>No adding images or other visual flourishes</li>\n<li>Implementing layouts is okay as long as they use the default Flex skins</li>\n</ul>\n<p>As far as RPGs go, I've always liked Bioware's Dragon Age: Origins and it's likely going to be my biggest influence here other than Krin's Sonny. I like Bioware's emphasis on a story-focused game with player choices driving the narrative.</p>\n<p>Dragon Age's save system has several has functions:</p>\n<ol>\n<li>Start a new character</li>\n<li>Select a character to load an existing game from</li>\n<li>Load an existing game from a list of saves</li>\n<li>Delete an existing game from a list of saves</li>\n<li>Delete a character</li>\n</ol>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/73075698-29dc3c00-3ec5-11ea-8908-10e5309d1767-2.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/31/responsive/73075698-29dc3c00-3ec5-11ea-8908-10e5309d1767-2-xs.png 300w ,https://olinkirk.land/media/posts/31/responsive/73075698-29dc3c00-3ec5-11ea-8908-10e5309d1767-2-sm.png 480w ,https://olinkirk.land/media/posts/31/responsive/73075698-29dc3c00-3ec5-11ea-8908-10e5309d1767-2-md.png 768w\"  alt=\"\" width=\"1920\" height=\"1080\">\n<figcaption >Dragon Age: Origin's \"Load Game\" menu, accessible from the main menu</figcaption>\n</figure>\n<p>Once in the game, auto-saves, quick-saves, manual saves, and chapter saves take place and are organized under the current character.</p>\n<p>I implemented this system pretty quickly, with saves existing in a straightforward folder structure using character names. Everything so far works pretty smoothly which is nice. The game-state serializes/deserializes to json, and saves are sorted by their creation date.</p>\n<p>I still want to add some of the details like time played, location, or a screenshot. I really like how Bioware displays your \"story so far\" to indicate progress - it's a lot more interesting than a \"39% complete\" indicator you see more often. Overall, I'm happy with what I have so far and think I'm ready to start piecing together other parts of my game.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-00-06.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-00-06-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-28.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-28-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-37.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-37-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-44.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-01-44-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-02-07.png\" data-size=\"960x720\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/31/gallery/adl_2021-09-04_00-02-07-thumbnail.png\" alt=\"\" width=\"768\" height=\"576\"></a></figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/31/glacier-aurora-aurora-borealis-night.jpg",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Polaris",
                   "Blog"
            ],
            "date_published": "2021-09-06T17:04:57+02:00",
            "date_modified": "2021-10-14T20:21:51+02:00"
        },
        {
            "id": "https://olinkirk.land/movie-nite/",
            "url": "https://olinkirk.land/movie-nite/",
            "title": "Movie Nite",
            "summary": "With my wife in Houston taking her last required class in person for her degree and me stuck alone in&hellip;",
            "content_html": "<p>With my wife in Houston taking her last required class in person for her degree and me stuck alone in our apartment Cologne during the pandemic, one way we have managed to still have our date nights is watching stuff together. Amazon Prime has this great watch party feature, but we were both logged into the same account and couldn't really figure it out. Netflix doesn't seem to have a shared watching thing either, and streaming isn't really an option. Some of the shows I have downloaded locally I'd need to transfer to her somehow, maybe zipping it to get around copyright blacklists and putting it in dropbox and giving her a shared link? Takes forever, though.</p>\n<p>There are already a <a href=\"https://superuser.com/questions/338807/synchronized-video-playback-over-the-network\" target=\"_blank\" rel=\"noopener noreferrer\">couple tools that do this</a>. That being said, I decided to try and make my version of this app anyways. Conditions of success:</p>\n<ol>\n<li>Connect to or host a server instance</li>\n<li>Choose a name and avatar that other users can see</li>\n<li>View a combined collection library</li>\n<li>Download files you (connected client) don't have from the server</li>\n<li>Load, play, pause, and seek video files in sync with all other connected users</li>\n</ol>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/30/adl_2021-08-06_16-00-51.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/30/responsive/adl_2021-08-06_16-00-51-xs.png 300w ,https://olinkirk.land/media/posts/30/responsive/adl_2021-08-06_16-00-51-sm.png 480w ,https://olinkirk.land/media/posts/30/responsive/adl_2021-08-06_16-00-51-md.png 768w\"  alt=\"\" width=\"1776\" height=\"841\">\n<figcaption >Current progress; I didn't bother skinning the UI yet</figcaption>\n</figure>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-01-34.png\" data-size=\"528x203\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-01-34-thumbnail.png\" alt=\"\" width=\"528\" height=\"203\"></a>\n<figcaption>Watch now popup (file info)</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-01-46.jpg\" data-size=\"1776x841\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-01-46-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"364\"></a>\n<figcaption>Watching a video</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-03-50.png\" data-size=\"512x703\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/30/gallery/adl_2021-08-06_16-03-50-thumbnail.png\" alt=\"\" width=\"512\" height=\"703\"></a>\n<figcaption>Edit profile</figcaption>\n</figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/30/chrome_2021-08-06_16-00-14.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Movie Nite",
                   "Blog"
            ],
            "date_published": "2021-08-03T09:33:28+02:00",
            "date_modified": "2021-10-30T15:25:19+02:00"
        },
        {
            "id": "https://olinkirk.land/localization/",
            "url": "https://olinkirk.land/localization/",
            "title": "Localization",
            "summary": "I usually just hardcode the text on buttons, menus, and text fields. This is fast and for most of my&hellip;",
            "content_html": "<p>I usually just hardcode the text on buttons, menus, and text fields. This is fast and for most of my purposes definitely good enough, but makes any app really hard to translate into different languages.</p>\n<p>In my professional career as a software developer, I've come across a couple different methods of implementing localization and wanted to try implementing a simple form of it for my Worldmaker app. I decided on three objectives.</p>\n<ol>\n<li>Accessing strings needs to be simple. <code>LanguageManager.getText(\"foo\", [], 0, false)</code> is ugly and confusing. Much easier: <code>Local.text(\"foo\")</code></li>\n<li>It has to be in JSON. No XML, no custom arrangement, just simple JSON that can be parsed in. I also happen to know the popular localization web platform <a href=\"https://poeditor.com/\" target=\"_blank\" rel=\"noopener noreferrer\">POEditor</a> lets you import JSON which means outsourcing newly added languages would be a breeze.</li>\n<li>Adding new dictionaries and language entries should be straightforward. If I want to localize to a new language, I should be able to easily scale up my dictionaries to meet that need.</li>\n</ol>\n<p>First, I created a class called <code>Local.as</code> which stores all the logic needed for the dictionaries and language-related string manipulation.</p>\n<p>Let's break down what the class does. <code>Local.as</code> contains references to the JSON dictionaries, a property to keep track of the selected language, and the current dictionary of keys and terms.</p>\n<p>Apart from that, a function <code>set language(id:String)</code> sets the selected language and loads the appropriate dictionary, while the static function <code>get text(id:String, args:Array = null):String</code> allows other classes to easily access the current dictionary's key entries. If an unknown key is accessed, a trace lets me know exactly what key is missing so I can enter it into the dictionary.</p>\n<p>I implemented a little popup to change the language - finally the options button on the navigation bar has some use! I added pig-latin after a suggestion from a friend for testing purposes; it's easier to produce pig-latin on the fly than German or French and it looks better than lorem ipsum.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/19/adl_2021-07-07_22-32-57.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/19/responsive/adl_2021-07-07_22-32-57-xs.png 300w ,https://olinkirk.land/media/posts/19/responsive/adl_2021-07-07_22-32-57-sm.png 480w ,https://olinkirk.land/media/posts/19/responsive/adl_2021-07-07_22-32-57-md.png 768w\"  alt=\"\" width=\"487\" height=\"276\">\n<figcaption >The highly awaited options popup</figcaption>\n</figure>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/19/Untitled.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/19/responsive/Untitled-xs.png 300w ,https://olinkirk.land/media/posts/19/responsive/Untitled-sm.png 480w ,https://olinkirk.land/media/posts/19/responsive/Untitled-md.png 768w\"  alt=\"\" width=\"882\" height=\"860\">\n<figcaption >Left: English, Right: Pig-latin</figcaption>\n</figure>\n<p>I'm very happy with how it turned out. One thing that I want to address in the future is the ability to change the language without having to reload the app.</p>",
            "image": "https://olinkirk.land/media/posts/19/beeplugin_languages.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker",
                   "Blog"
            ],
            "date_published": "2021-07-07T22:18:01+02:00",
            "date_modified": "2021-07-09T16:22:56+02:00"
        },
        {
            "id": "https://olinkirk.land/worlds/",
            "url": "https://olinkirk.land/worlds/",
            "title": "Worlds | More Adventures in Generated Maps",
            "summary": "After Realms, I chose to build another app to procedurally generate maps. My initial focus when making this app, dubbed&hellip;",
            "content_html": "<p>After <a href=\"https://olinkirk.land/realms/\">Realms</a>, I chose to build another app to procedurally generate maps.</p>\n<p>My initial focus when making this app, dubbed \"Worlds\", was performance. A huge issue for me in Realms had been bad performance due to technical debt and amateur knowledge of how the different modules and layers worked together.</p>\n<p>I introduced a quad-tree to contain the points (cell centers), then implemented tectonic plates to replace the system for generating the height map (previously random mountains and hardcoded mountain ranges). The quad-tree makes it really fast to identify where a user has clicked, whereas in Realms there would be lag after a mouse-click while the program desperately looped through every cell to find the one closest to the cursor.</p>\n<p>Another issue I had in Realms had been how to display mountains. Mountains are often surrounded, at least partially, with dense forests. The way I drew forests was one big blob shape instead of individual trees, and getting something to wrap around another shape like that in 2D got pretty hard. I tried drawing mountains procedurally like Dragons Abound <a href=\"https://heredragonsabound.blogspot.com/2019/11/new-mountains-and-new-approach-part-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">so cleverly does</a>, but had limited success.</p>\n<p>I decided to try and render the world with \"3D\" like shading, based off some code in Amit Patel's original article <a href=\"http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/\" target=\"_blank\" rel=\"noopener noreferrer\">Polygonal Map Generation for Games</a>.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/adl_2021-04-08_23-35-20.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/22/responsive/adl_2021-04-08_23-35-20-xs.png 300w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-04-08_23-35-20-sm.png 480w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-04-08_23-35-20-md.png 768w\"  alt=\"\" width=\"1728\" height=\"929\">\n<figcaption >A simple transparent shading layer creates an unmistakable \"low poly\" effect and clearly indicates mountains and valleys</figcaption>\n</figure>\n<pre>public function calculateLighting(p:Cell, r:Corner, s:Corner):Number<br>{<br>    var lightVector:Vector3D = new Vector3D(1, 1, 0);<br><br>    var a:Vector3D = new Vector3D(p.point.x, p.point.y, p.elevation);<br>    var b:Vector3D = new Vector3D(r.point.x, r.point.y, r.elevation);<br>    var c:Vector3D = new Vector3D(s.point.x, s.point.y, s.elevation);<br><br>    var normal:Vector3D = b.subtract(a).crossProduct(c.subtract(a));<br>    if (normal.z &lt; 0)<br>        normal.scaleBy(-1);<br>    normal.normalize();<br><br>    var light:Number = 0.5 + 35 * normal.dotProduct(lightVector);<br>    if (light &lt; 0) light = 0;<br>    else if (light &gt; 1) light = 1;<br><br>    return light;<br>}</pre>\n<p>Additionally, I built the code from the ground up around the idea that each visual layer is modular and able to be toggled individually.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/adl_2021-07-09_15-41-53.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-41-53-xs.png 300w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-41-53-sm.png 480w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-41-53-md.png 768w\"  alt=\"\" width=\"1437\" height=\"215\">\n<figcaption >I put the usability of the app first this time around</figcaption>\n</figure>\n<p>A settings popup allows multiple properties to be adjusted during runtime - however, the world has to be regenerated every time a setting is changed.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/adl_2021-07-09_15-44-47.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-44-47-xs.png 300w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-44-47-sm.png 480w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-44-47-md.png 768w\"  alt=\"\" width=\"1187\" height=\"1127\">\n<figcaption >The settings popup gives me a lot more power over the generated world</figcaption>\n</figure>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/adl_2021-07-09_15-45-32.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-45-32-xs.png 300w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-45-32-sm.png 480w ,https://olinkirk.land/media/posts/22/responsive/adl_2021-07-09_15-45-32-md.png 768w\"  alt=\"\" width=\"1789\" height=\"374\">\n<figcaption >The performance popup shows where I low hanging fruit can be tackled to fix performance issues</figcaption>\n</figure>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-46-25.png\" data-size=\"1980x971\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-46-25-thumbnail.png\" alt=\"\" width=\"768\" height=\"377\"></a>\n<figcaption>Tectonic plates</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-46-52.png\" data-size=\"1973x968\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-46-52-thumbnail.png\" alt=\"\" width=\"768\" height=\"377\"></a>\n<figcaption>Wind</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-03.png\" data-size=\"1978x967\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-03-thumbnail.png\" alt=\"\" width=\"768\" height=\"375\"></a>\n<figcaption>Wind and moisture with relief shading</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-23.png\" data-size=\"1980x969\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-23-thumbnail.png\" alt=\"\" width=\"768\" height=\"376\"></a>\n<figcaption>Elevation and relief shading</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-39.jpg\" data-size=\"1972x961\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/22/gallery/adl_2021-07-09_15-47-39-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"374\"></a>\n<figcaption>Flux with relief shading</figcaption>\n</figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/22/adl_2021-07-09_15-47-23.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Projects"
            ],
            "date_published": "2021-07-06T15:48:00+02:00",
            "date_modified": "2021-09-08T23:35:57+02:00"
        },
        {
            "id": "https://olinkirk.land/tectonic-plates/",
            "url": "https://olinkirk.land/tectonic-plates/",
            "title": "Tectonic Plates",
            "summary": "As discussed in my post about worldbuilding keystones, tectonic plates are a core concept that's really important to get right&hellip;",
            "content_html": "<p>As discussed in my post about <a href=\"https://olinkirk.land/defining-keystone-decisions/\">worldbuilding keystones</a>, tectonic plates are a core concept that's really important to get right if things like mountain ranges, island chains, and realistic(ish) landmass formations. And if the resulting height map isn't at least kind of believable and follows some semblance of natural processes, nothing else will be.</p>\n<p>My approach so far is a little simplistic, but I got to work out some kinks of how the different parts of the app interact with each other during the development, and due to the modular nature of how the app is structured, coming back to this step later on will be very straightforward.</p>\n<blockquote>\n<p><em>Tectonic plates</em> are pieces of Earth's crust and uppermost mantle.</p>\n</blockquote>\n<p>The theory of plate tectonics describes how these bits of crust have drifted around on the planet for the past three billion years, forming mountains when they crash into each other or trenches when they pull apart. Tectonic plates come in a variety of shapes and sizes, with each plate representing pretty distinct regions of the planet's surface.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Plates_tect2_en.svg/1200px-Plates_tect2_en.svg.png\" data-is-external-image=\"true\"  alt=\"\" width=\"717\" height=\"490\">\n<figcaption >Earth's tectonic plates (Wikipedia)</figcaption>\n</figure>\n<p>If I wanted to really simulate plate tectonics, I'd have to model the different plates, their velocities, direction, the currents of magma beneath the crust, and how the plates change shape when they collide or sink. I don't really care too much (right now) about recreating the science behind plate tectonics, though it would be interesting to model plate movement and flora/fauna evolution over time. But for the purposes of my app, I don't think it's a crucial component. And like I said earlier, I can always come back to this step and do all that stuff.</p>\n<p>I decided to simplify the process into some steps:</p>\n<ol>\n<li>Identify tectonic plate \"origins\" to flood-fill from</li>\n<li>Expand the plates from their origins, taking into account a user-defined \"jitter\" to add randomness</li>\n<li>Define a type for each plate (oceanic or continental)</li>\n<li>Define a direction (random) for each plate</li>\n</ol>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/18/adl_2021-07-06_14-46-33.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_14-46-33-xs.png 300w ,https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_14-46-33-sm.png 480w ,https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_14-46-33-md.png 768w\"  alt=\"\" width=\"1896\" height=\"1021\">\n<figcaption >Assigning the tectonic plates in the app</figcaption>\n</figure>\n<p>I've decided not to worry about wrapping my map east-west, mainly because dealing with the voronoi points wrapping/repeating is a huge hassle and I've dealt with that before. Instead, I'm just assigning any tectonic plate that touches the border of the map to be a \"deep\" plate. This plate type is unique to the app (and not found in real life); the height map will ignore any border between deep plates. The idea is to get a big, flat ocean around a series of continents in the middle of the map. This way I can wrap around later when it comes to pathfinding, wind, climate, etc.</p>\n<p>Assigning plate types is straightforward: I want some percent of the area to belong to continental plates, so I first sort the plates from smallest to largest, then assign their type to continental one by one until the total area of continental plates exceeds the goal. I haven't decided what that percent should be yet, but I'll play around with it until I'm happy with it.</p>\n<p>It's totally possible for users to create their plates from scratch (well, to place the plate origins and choose the directions/types).</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/18/adl_2021-07-06_15-01-50.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_15-01-50-xs.png 300w ,https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_15-01-50-sm.png 480w ,https://olinkirk.land/media/posts/18/responsive/adl_2021-07-06_15-01-50-md.png 768w\"  alt=\"\" width=\"366\" height=\"336\">\n<figcaption >Editing a tectonic plate in the toolbar's plate list</figcaption>\n</figure>\n<p>I added a \"Quick Start\" feature that gets prompted from a popup when entering the step to automatically generate plates from the get-go. I assume most users will just automatically generate plate combinations until they're happy with the result.</p>",
            "image": "https://olinkirk.land/media/posts/18/rundll32_2021-07-06_14-48-33.jpg",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker",
                   "Blog"
            ],
            "date_published": "2021-07-06T14:23:43+02:00",
            "date_modified": "2021-07-09T16:22:07+02:00"
        },
        {
            "id": "https://olinkirk.land/realms/",
            "url": "https://olinkirk.land/realms/",
            "title": "Realms | A Journey into Procedurally Generated Maps",
            "summary": "In 2018, I became interested in procedural generation in regards to map creation. It started with some basic procedural forest&hellip;",
            "content_html": "<p>In 2018, I became interested in procedural generation in regards to map creation. It started with some basic procedural forest generation I did when I was still working at Paul Bernhard Exhibits where a colleague and I were working toward a multi-screen strategy game about renewable energy.</p>\n<p>I've always loved the sort of fantasy fiction with a map tucked in the front cover of the book. I drew inspiration from <a href=\"http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/\">Amit Patel</a>, <a href=\"https://azgaar.wordpress.com/\">Azgaar's Fantasy Map Generator</a>, <a href=\"https://heredragonsabound.blogspot.com/\">Scott Turner</a>, and <a href=\"http://mewo2.com/notes/terrain/\">Marting O'Leary</a>.</p>\n<p>I pulled inspiration and motivation from maps like these.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/21/gallery/Western-Torfani.jpg\" data-size=\"4048x3320\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/gallery/Western-Torfani-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"630\"></a>\n<figcaption>Western Torfani by Ilanthar</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/21/gallery/tumblr_ojjg6wh2y91qdwahko1_1280.jpg\" data-size=\"1280x960\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/gallery/tumblr_ojjg6wh2y91qdwahko1_1280-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"576\"></a>\n<figcaption>Gondé and Ukyu by Ken Liu</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/21/gallery/tumblr_ojjg0aci6c1qdwahko1_1280.jpg\" data-size=\"1280x967\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/gallery/tumblr_ojjg0aci6c1qdwahko1_1280-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"580\"></a>\n<figcaption>The Islands of Dara by Ken Liu</figcaption>\n</figure>\n</div></div>\n<p><a href=\"https://ilanthar.jimdofree.com/worldbuilding-1/domhantyr/\" target=\"_blank\" rel=\"noopener noreferrer\">Ilanthar </a>also has a great selection of maps, though their website is largely in French.</p>\n<p>My end goal with Realms was to make a great big procedurally generated world complete with continents and island chains, wind directions, biomes, and a lot more. City generation within this world was also a goal, and I did some research into it. The best resource for city generation (somewhat recently kind of integrated with Azgaar’s work, more of an easter egg really) is by the procedural generation wizard Watabou and covers districts, walls, farms, roads, and rivers. You can view the <a href=\"https://watabou.itch.io/medieval-fantasy-city-generator\" target=\"_blank\" rel=\"noopener noreferrer\">medieval city/town generator</a> for yourself.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/chrome_2021-07-08_10-20-48.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-20-48-xs.png 300w ,https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-20-48-sm.png 480w ,https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-20-48-md.png 768w\"  alt=\"\" width=\"1777\" height=\"988\">\n<figcaption >Watabou's awesome city generator creates and labels districts and noteworthy buildings</figcaption>\n</figure>\n<p> Other places I took inspiration were from Azgaar's Fantasy Map Generator, Amit Patel, Scott Turner's Dragons Abound, and Martin O'Leary's Fantasy Maps. Most of these programmers overlap in some way and borrow ideas from each other, and each has their own way of explaining certain concepts they've worked on making all of them crucial for a complete understanding of map generation.</p>\n<p>Azgaar has the best (bar none) available map generator that can be run immediately in the browser. His work is current but unfortunately I find it hard to understand a lot of his (JavaScript) code. Nevertheless, his blog discusses in detail the approach he takes to tackling various challenges which makes it not only a fantastic starting point but also great reference material when writing parallel code.</p>\n<ul>\n<li><a href=\"https://azgaar.github.io/Fantasy-Map-Generator/\">Azgaar’s Map Generator</a></li>\n<li><a href=\"https://azgaar.wordpress.com/\">Azgaar’s Dev Blog</a></li>\n<li><a href=\"https://trello.com/b/7x832DG4/fantasy-map-generator\">Azgaar’s Trello Board</a></li>\n</ul>\n<p>Amit Patel has several iterations of his maps, and his oldest ones were done in ActionScript, which originally got me into procedural programming. Amit’s site boasts a lot of amazing in-depth tutorials and essays on different programming concepts ranging from pathfinding to his most popular: generating random worlds.</p>\n<ul>\n<li><a href=\"https://www.redblobgames.com/\">Amit Patel’s Website</a></li>\n<li><a href=\"https://www.redblobgames.com/maps/mapgen4/\">Amit Patel’s Map Generator (4)</a></li>\n<li><a href=\"http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/\">Amit Patel’s Polygonal Map Generation Blog Post</a></li>\n</ul>\n<p>Scott Turner has taken map generation and gone off the deep end with it. His blog doesn’t usually show actual code, but goes into a satisfying amount of detail about how he achieves his map generation. He mainly focuses on generated art, creating maps that look practically hand drawn. If you’re seeking the most advanced concepts and methods, Scott’s blog is certain to provide you with more than enough material.</p>\n<ul>\n<li><a href=\"https://heredragonsabound.blogspot.com/\">Scott Turner’s Blog</a></li>\n<li><a href=\"https://heredragonsabound.blogspot.com/2017/10/recreating-style.html\">Scott Turner’s Blog: Recreating a Style</a></li>\n<li><a href=\"https://heredragonsabound.blogspot.com/2017/03/sprucing-up-forest.html\">Scott Turner’s Blog: Forest Coloring</a></li>\n</ul>\n<p>Martin O'Leary's Fantasy Maps are limited but they also served as an inspiration to Scott Turner and Azgaar, which makes them an important keystone in the map generating community. His post detailing his work goes into great detail and explains the map-making process intuitively and interactively. He also made a Twitter bot that posts randomly generated maps from his generator.</p>\n<ul>\n<li><a href=\"http://mewo2.com/notes/terrain/\">Martin O’Leary’s Blog Post</a></li>\n<li><a href=\"https://twitter.com/unchartedatlas\">Martin O’Leary’s Uncharted Atlas Twitter Bot</a></li>\n</ul>\n<p>I came across some valuable additional resources as I explored the topic.</p>\n<ul>\n<li><a href=\"https://worldbuildingschool.com/real-world-maps/\">Real World Maps vs Fantasy Maps</a></li>\n<li><a href=\"https://www.polygon.com/2014/7/23/5926447/dwarf-fortress-will-crush-your-cpu-because-creating-history-is-hard\">Dwarf Fortress History Generation</a></li>\n<li><a href=\"http://rpgmaps.profantasy.com/making-a-city-part-3-2/\">Profantasy’s City Making</a></li>\n<li><a href=\"https://azgaar.wordpress.com/2018/02/08/templates-implementation-and-heightmap-editor-ui/\">Azgaar’s Geographic Templates</a></li>\n<li><a href=\"https://www.lostkingdom.net/lets-design-a-medieval-village-introduction/\">Settlement Design</a></li>\n<li><a href=\"https://worldbuilding.stackexchange.com/questions/73233/logical-location-for-cities\">Logical Locations for Cities</a></li>\n<li><a href=\"https://worldbuildingworkshop.com/2015/12/17/where-to-place-your-settlements/\">Placement of Settlements</a></li>\n<li><a href=\"https://azgaar.wordpress.com/2017/11/21/settlements/\">Azgaar’s Settlement Placement</a></li>\n<li><a href=\"https://worldbuildingworkshop.com/2015/12/17/where-to-place-your-settlements/\">Medieval Military: What percentage of a population was in the military?</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=7xVOhNt3JQk\">Drawing Mountains</a></li>\n<li><a href=\"https://worldbuilding.stackexchange.com/questions/58152/are-there-any-rules-or-guidelines-about-designing-a-flag/72244#72244\">Guidelines to Flag Design</a></li>\n</ul>\n<p>For my own map generator, dubbed \"Realms\", I decided to dive right in and essentially copied how Azgaar's height map is generated. A giant \"sticky\" mountain with a few mountains dotted around it. Raise the sea level to produce islands and continents, practically at random. Looks okay, but isn't very realistic. The map ends up with several mountains but no mountain ranges to speak of. Drop moisture on the map evenly and roll it down slopes to produce rivers.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/rundll32_2020-09-22_11-43-31.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/21/responsive/rundll32_2020-09-22_11-43-31-xs.png 300w ,https://olinkirk.land/media/posts/21/responsive/rundll32_2020-09-22_11-43-31-sm.png 480w ,https://olinkirk.land/media/posts/21/responsive/rundll32_2020-09-22_11-43-31-md.png 768w\"  alt=\"\" width=\"1332\" height=\"941\">\n<figcaption >Simple enough, the first iteration of the voronoi-cell map generator looks good. Shading represents height, and lines and circles represent flow and flow strength.</figcaption>\n</figure>\n<p>Next, I added biomes and a temperature layer to keep the south warm and the north cold. Town placement was pretty straightforward, but roads took me a while to implement.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/chrome_2021-07-08_10-35-44.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-35-44-xs.png 300w ,https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-35-44-sm.png 480w ,https://olinkirk.land/media/posts/21/responsive/chrome_2021-07-08_10-35-44-md.png 768w\"  alt=\"\" width=\"2111\" height=\"1456\">\n<figcaption >I created two types of forest drawing patterns with heavy inspiration from Scott Turner's work</figcaption>\n</figure>\n<p>I ended up getting really invested in toponymy - the way things are named. After tremendous amounts of research, I went with German as a good base language because English has too many variables (Norman and Viking invasions have left the English language riddled with peculiarities that make toponymy hard). German on the other hand simply combines common words or names into place names.</p>\n<p>I put together a pretty convoluted system for naming places after trying multiple other approaches including real place names and <a href=\"https://www.samcodes.co.uk/project/markov-namegen/\" target=\"_blank\" rel=\"noopener noreferrer\">markov chains</a>. These methods, while fast and easy to implement resulted in irrelevant names. For example, an inland town with an industry focused around a salt mine should probably be called something related to that. Or related to the founder of the town. Random real place names and markov chains ignore context entirely.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/21/gallery/adl_2019-04-27_22-15-13.png\" data-size=\"1920x974\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/gallery/adl_2019-04-27_22-15-13-thumbnail.png\" alt=\"\" width=\"768\" height=\"390\"></a>\n<figcaption>Region names</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/21/gallery/adl_2019-07-30_18-56-43.png\" data-size=\"940x882\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/21/gallery/adl_2019-07-30_18-56-43-thumbnail.png\" alt=\"\" width=\"768\" height=\"721\"></a>\n<figcaption>Town names</figcaption>\n</figure>\n</div></div>\n<p>I learned a ton from this project, but I started running into performance issues and got demotivated by technical debt as my code base grew.</p>\n<p>You can view my <a href=\"https://github.com/olinkirkland/realms\" target=\"_blank\" rel=\"noopener noreferrer\">source code</a> on GitHub or view the (inactive) <a href=\"https://trello.com/b/SoUEo0DZ/realms\" target=\"_blank\" rel=\"noopener noreferrer\">Trello board</a>.</p>",
            "image": "https://olinkirk.land/media/posts/21/adl_2019-04-27_22-15-13.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Projects"
            ],
            "date_published": "2021-07-05T10:08:00+02:00",
            "date_modified": "2021-07-09T16:40:48+02:00"
        },
        {
            "id": "https://olinkirk.land/omg/",
            "url": "https://olinkirk.land/omg/",
            "title": "OMG | Exploring Making a Social Network",
            "summary": "OMGPOP was a big part of my high school experience: free online (Flash) games you can play with your friends&hellip;",
            "content_html": "<p>OMGPOP was a big part of my high school experience: free online (Flash) games you can play with your friends by inviting them to the current session with a url? Yes, please!</p>\n<p>I wanted to recreate that experience, but bit off more than I could chew. Learned a lot, though! You can view my code in my <a href=\"I worked for a while on a solo-project social gaming platform. Doing this, I learned a lot about networking, application design, and the Flex framework.\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub repository</a>.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"2\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-20_23-09-55-2.png\" data-size=\"1275x446\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-20_23-09-55-2-thumbnail.png\" alt=\"\" width=\"768\" height=\"269\"></a>\n<figcaption>User profiles</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-20_01-32-26-2.png\" data-size=\"273x161\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-20_01-32-26-2-thumbnail.png\" alt=\"\" width=\"273\" height=\"161\"></a>\n<figcaption>The navigation banner indicates where a user is, like simplified breadcrumbs that only show the top level category</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-25_00-09-48-2.png\" data-size=\"1500x1200\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-25_00-09-48-2-thumbnail.png\" alt=\"\" width=\"768\" height=\"614\"></a>\n<figcaption>If a user is blocked or doesn't exist, the server serves up a 404 equivalent</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-23_10-17-53-2.png\" data-size=\"1500x1200\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-23_10-17-53-2-thumbnail.png\" alt=\"\" width=\"768\" height=\"614\"></a>\n<figcaption>Sleek UI and loading screen</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-19_18-13-53-2.png\" data-size=\"1500x1200\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-19_18-13-53-2-thumbnail.png\" alt=\"\" width=\"768\" height=\"614\"></a>\n<figcaption>A combination of modern, bootstrap-esque design and nostalgic OMGPOP style</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-15_00-21-09-2.png\" data-size=\"901x790\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/23/gallery/flashplayer_32_sa_debug_2020-07-15_00-21-09-2-thumbnail.png\" alt=\"\" width=\"768\" height=\"673\"></a>\n<figcaption>Register/Login screen were fully functional with an Air implemented backend</figcaption>\n</figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/23/flashplayer_32_sa_debug_2020-07-19_18-13-53.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Projects"
            ],
            "date_published": "2021-07-03T15:57:00+02:00",
            "date_modified": "2021-09-08T23:35:43+02:00"
        },
        {
            "id": "https://olinkirk.land/drawing-and-layers/",
            "url": "https://olinkirk.land/drawing-and-layers/",
            "title": "Drawing &amp; Layers",
            "summary": "Reimplementing the Layers Pane was easier than I expected. I had a lot of work done from before and was&hellip;",
            "content_html": "<p>Reimplementing the Layers Pane was easier than I expected. I had a lot of work done from before and was able to copy most of the code directly from the <a href=\"https://olinkirk.land/worldmaker/\">previous iteration</a>.</p>\n<p>The major difference for layers this time comes down to code structure. Instead of sending events to the Map class, this time the Layers Pane and the Map pane both directly access the layers ArrayCollection that's created and stored in the TaskManager's currentTask. Since it's a singleton, there's no difficulty keeping the Map and Layers Pane in sync.</p>\n<p>The TaskManager itself keeps tabs on the ArrayCollection and dispatches events through the Signal singleton letting any listener to the Signal class know if a change to the Layers has occurred.</p>\n<p>Each task only initially stores the unique IDs of the layers that are to be displayed for that task. The actual Layer objects are initialized when the <code>resetLayers()</code> function is called (at the end of each Task class constructor). This function is also called when the layers are reset (returned to their original visibility and arrangement).</p>\n<pre>public function resetLayers():void<br>{<br>    layers.removeAll();<br>    for each (var l:String in _layerIds)<br>    {<br>        var layer:Layer = new Layer();<br>        layer.id = l;<br>        layer.visible = true;<br>        layer.allowed = true;<br>        layers.addItem(layer);<br>    }<br>}</pre>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/17/adl_2021-06-18_10-25-29.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/17/responsive/adl_2021-06-18_10-25-29-xs.png 300w ,https://olinkirk.land/media/posts/17/responsive/adl_2021-06-18_10-25-29-sm.png 480w ,https://olinkirk.land/media/posts/17/responsive/adl_2021-06-18_10-25-29-md.png 768w\"  alt=\"\" width=\"469\" height=\"205\">\n<figcaption >Finally, a functional layers pane for the new build</figcaption>\n</figure>\n<p>Drawing the map itself takes on a different approach as well. The <code>onDraw(event)</code> function contains a switch by layer id, and loops over each layer in the currentTask's Layers ArrayCollection. I decided to separate the act of drawing each layer into individual functions dedicated to that particular layer's visualization.</p>\n<pre>for each (var layer:Layer in layers)<br>{<br>    if (!layer.visible)<br>        continue;<br><br>    switch (layer.id)<br>    {<br>        case Layer.POINTS:<br>            drawPoints();<br>            break;<br>        case Layer.VORONOI:<br>            drawVoronoi();<br>            break;<br>        case Layer.DELAUNAY:<br>            drawDelaunay();<br>            break;<br>        case Layer.TECTONIC_PLATES:<br>            drawTectonics();<br>            break;<br>    }<br>}</pre>\n<p>If a new layer is to be added to some task, the easy scalability of this approach makes it very straightforward to expand tasks without needing to delve deep into existing code.</p>",
            "image": "https://olinkirk.land/media/posts/17/chrome_2021-06-18_10-16-50.jpg",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker",
                   "Blog"
            ],
            "date_published": "2021-06-18T10:14:58+02:00",
            "date_modified": "2021-07-09T16:23:31+02:00"
        },
        {
            "id": "https://olinkirk.land/code-structure-and-state-management/",
            "url": "https://olinkirk.land/code-structure-and-state-management/",
            "title": "Code Structure &amp; State Management",
            "summary": "Since the structure of the application and the user's actions revolves around tasks (keystone decisions), it feels right to build&hellip;",
            "content_html": "<p>Since the structure of the application and the user's actions revolves around tasks (keystone decisions), it feels right to build the structure of the code around these as well. To do this, I decided to make a Task class that contains all the information for a task, including the task's name and references to relevant modules.</p>\n<p>A singleton contains all tasks and can perform operations like setting the current task or incrementing to the next task.</p>\n<p>Tasks need to have a lot of control over the application state, and be referenced to see what gets displayed and calculated. Essentially a task acts the way a game cartridge would in a gaming console - you slide on in and you could have a totally different game, but it is still controlled using the same way (a controller) and still communicates information to the user using the same methods (a screen/sound).</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/16/Task-1.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/16/responsive/Task-1-xs.png 300w ,https://olinkirk.land/media/posts/16/responsive/Task-1-sm.png 480w ,https://olinkirk.land/media/posts/16/responsive/Task-1-md.png 768w\"  alt=\"\" width=\"964\" height=\"512\">\n<figcaption >Different events act upon the task</figcaption>\n</figure>\n<p>Different events (in the game console metaphor, controllers) will act on the task. It's important for each task therefore to have a function to handle any of these events. Creating an abstract Task class to inherit the other task classes from helps keep this organized.</p>",
            "image": "https://olinkirk.land/media/posts/16/urban-construction-building-sketch-city-house-town-vector-illustration-isolated-white-background-85788471.jpg",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker",
                   "Blog"
            ],
            "date_published": "2021-06-08T15:35:00+02:00",
            "date_modified": "2021-07-09T16:23:38+02:00"
        }
    ]
}
