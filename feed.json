{
    "version": "https://jsonfeed.org/version/1",
    "title": "Olin Kirkland",
    "description": "",
    "home_page_url": "https://olinkirk.land",
    "feed_url": "https://olinkirk.land/feed.json",
    "user_comment": "",
    "author": {
        "name": "Olin Kirkland"
    },
    "items": [
        {
            "id": "https://olinkirk.land/code-structure/",
            "url": "https://olinkirk.land/code-structure/",
            "title": "Code Structure",
            "summary": "Building the code structure is ",
            "content_html": "<p>Building the code structure is </p>",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
            ],
            "date_published": "2021-05-14T13:41:33+02:00",
            "date_modified": "2021-05-14T13:41:33+02:00"
        },
        {
            "id": "https://olinkirk.land/replanning-worldmaker/",
            "url": "https://olinkirk.land/replanning-worldmaker/",
            "title": "(re)Planning Worldmaker",
            "summary": "A decent amount of work has gone into Worldmaker, and I kind of knew at the back of my head&hellip;",
            "content_html": "<p>A decent amount of work has gone into Worldmaker, and I kind of knew at the back of my head that there would need to be a rework but I didn't expect to do it this soon.</p>\n<p>The core concept behind Worldmaker is putting the user behind the wheel of <strong>keystone decisions</strong>, called \"Tasks\" in the app. I realize now that I should have planned out a larger number of these before jumping into the code.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/14/tasks.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/14/responsive/tasks-xs.png 300w ,https://olinkirk.land/media/posts/14/responsive/tasks-sm.png 480w ,https://olinkirk.land/media/posts/14/responsive/tasks-md.png 768w\"  alt=\"\" width=\"490\" height=\"456\">\n<figcaption >All tasks can be viewed in one handy popup</figcaption>\n</figure>\n<p>As development progressed, I realized that it's really important that these tasks and their associated code:</p>\n<ol>\n<li>Are <strong>modular</strong></li>\n<li>Can easily have new ones added or inserted</li>\n<li>Have easy <strong>access </strong>to the state</li>\n</ol>\n<p>Unfortunately as I worked, I realized I had dug myself a pretty convoluted hole of a structure where a lot of the logic was performed within the \"toolbar\" - a UI element appearing on the right side of the screen, and due to the state's decidedly untyped nature, things got hard to understand fast, especially if I hadn't worked on it in a few days.</p>\n<p>The first task is more of a test case than anything. It requires the user to read a short introduction text in the toolbar, then continue to the next task.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/14/adl_2021-05-14_10-24-26.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/14/responsive/adl_2021-05-14_10-24-26-xs.png 300w ,https://olinkirk.land/media/posts/14/responsive/adl_2021-05-14_10-24-26-sm.png 480w ,https://olinkirk.land/media/posts/14/responsive/adl_2021-05-14_10-24-26-md.png 768w\"  alt=\"\" width=\"1896\" height=\"1021\">\n<figcaption >The first task</figcaption>\n</figure>\n<ul>\n<li><strong>Top Bar: </strong>Along the top of the screen, there's a pretty empty bar whose only real purpose is to hold the logo and the save button. In the future, app-level buttons will go here - to access options or screenshot functionality.</li>\n<li><strong>Layers:</strong> On the far left, there's a layers panel that is hidden by default. Map layers can be toggled and rearranged from this panel. Layers that are not available are locked.</li>\n<li><strong>The Map:</strong> In the center of the screen is the map. The map is directly changed by the state. When there's a state change event, the map redraws the affected layers.</li>\n<li><strong>The Toolbar:</strong> The toolbar is where the user can affect the current task or progress to the next task. Changing options in the toolbar affects the state.</li>\n</ul>\n<p>User flow goes something like this:</p>\n<ol>\n<li>User makes a change to toolbar</li>\n<li>State changes</li>\n<li>Map changes to reflect state change</li>\n</ol>\n<p>My big mistake was not to abstract the state, and fail to create an overall modularization of the different tasks as their own classes. Since a lot of logic takes place within the toolbar itself right now, I need to figure out how to organize the code and content so that the toolbar does no logic and only forwards the desired changes to a state controller that knows what the current task is and what classes will take over the necessary calculations.</p>\n<p>My next step will be to create a proper flow chart that can be referred to when crafting a new structure for the program.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-05-26.png\" data-size=\"1896x1021\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-05-26-thumbnail.png\" alt=\"\" width=\"768\" height=\"414\"></a>\n<figcaption>Poisson Points</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-06-08.png\" data-size=\"1896x1021\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-06-08-thumbnail.png\" alt=\"\" width=\"768\" height=\"414\"></a>\n<figcaption>Hexagon Points</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-05-59.png\" data-size=\"1896x1021\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/14/gallery/adl_2021-05-14_11-05-59-thumbnail.png\" alt=\"\" width=\"768\" height=\"414\"></a>\n<figcaption>Square Points</figcaption>\n</figure>\n</div></div>",
            "image": "https://olinkirk.land/media/posts/14/adl_2021-05-14_11-14-33.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker"
            ],
            "date_published": "2021-05-14T10:03:32+02:00",
            "date_modified": "2021-05-14T11:14:45+02:00"
        },
        {
            "id": "https://olinkirk.land/worldmaker/",
            "url": "https://olinkirk.land/worldmaker/",
            "title": "Worldmaker",
            "summary": "My world generation projects have gone through a few iterations now. First, I had \"Realms\", in which I did a&hellip;",
            "content_html": "<p>My world generation projects have gone through a few iterations now.</p>\n<p>First, I had \"Realms\", in which I did a ton of cool stuff like drawing forests and rivers, generating height maps from different effects (like island shapes and preset mountain ranges), creating regions with natural boundaries like rivers, mountains, and coasts, determining the best place for cities and towns to be located, and an extensive naming system that used word combinations in English and German to produce believable medieval place names. This was really exciting to put together but the technical debt became too great in the end and I was having a lot of trouble with wind simulation, continent generation, my code structure, and miserable performance. I put down the procedural experimenting for a while.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/13/chrome_2021-03-11_23-21-56.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/13/responsive/chrome_2021-03-11_23-21-56-xs.png 300w ,https://olinkirk.land/media/posts/13/responsive/chrome_2021-03-11_23-21-56-sm.png 480w ,https://olinkirk.land/media/posts/13/responsive/chrome_2021-03-11_23-21-56-md.png 768w\"  alt=\"Realms with forests, cities, and connecting roads\" width=\"2260\" height=\"1461\">\n<figcaption >Realms with forests, cities, and connecting roads</figcaption>\n</figure>\n<p>Then, I decided that realms weren't enough. I wanted to make \"Worlds\". Realms had never felt that big, really - the regions felt kind of small and the islands produced by the generator didn't look or act like real continents. I also had had a lot of trouble with rendering mountains and wanted to do something more '3D'. So I started with Worlds. It felt really good going back to the drawing board and beginning with an eye on performance: I used a quad-tree to keep track of the voronoi cell points so that finding points would be smooth. The different logic layers like wind and hydrology were separated reasonably into different areas of the code instead of being jumbled together. The logic occurred in one place and once it was done, the map was drawn in a single step. In general, Worlds was leaps and bounds ahead of Realms.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/13/adl_2021-03-09_23-23-45.png\" sizes=\"(max-width: 48em) 100vw, 100vw\" srcset=\"https://olinkirk.land/media/posts/13/responsive/adl_2021-03-09_23-23-45-xs.png 300w ,https://olinkirk.land/media/posts/13/responsive/adl_2021-03-09_23-23-45-sm.png 480w ,https://olinkirk.land/media/posts/13/responsive/adl_2021-03-09_23-23-45-md.png 768w\"  alt=\"Worlds with &quot;low-poly&quot; style relief shading\" width=\"1692\" height=\"968\">\n<figcaption >Worlds with \"low-poly\" style relief shading</figcaption>\n</figure>\n<p>But even so, some of the new features I added felt cumbersome. Settings were organized pretty poorly and wind still didn't work well. I thought the 3D style initially looked really good but the longer I worked with it the more tiresome it grew. I really wanted to make a stylized 2D map and the low-poly shading just wasn't doing that for me. The tectonics system I introduced was good on the surface but only about 10% of the resulting maps looked \"fun\".</p>\n<p>Here comes Worldmaker.</p>\n<ol>\n<li>1. No longer satisfied with purely procedural maps, I want to make an application that <strong>lets the user define different \"keystone\" decisions</strong> that are hard to generate.</li>\n<li>I want to release the app once it's functional to get feedback - and continue to <strong>release versions with improvements</strong> that enhance or replace the \"keystone\" decisions.</li>\n<li>To do this, I decided to <strong>make a launcher</strong> first. A launcher will let users install different versions of the app and create, load, and share their own world projects.</li>\n</ol>\n<p>What are examples of \"keystone\" decisions? In Realms, only one keystone could be set: The map's seed, a number used to determine every random aspect of the map. Worlds introduced a number of settings to fine tune the map, but the map settings weren't stored with the map. Sea level, wind strength, and average temperature are all easily set keystones with a slider but something like tectonic plate design or island chains is not.</p>\n<p>I want this to be a lot closer to what Azgaar does in his map generator, but more step-by-step and intuitive as far as UI goes.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/13/gallery/adl_2021-03-11_23-05-25.png\" data-size=\"480x671\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/13/gallery/adl_2021-03-11_23-05-25-thumbnail.png\" alt=\"\" width=\"480\" height=\"671\"></a>\n<figcaption>Creating a new project</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/13/gallery/adl_2021-03-11_23-09-54.png\" data-size=\"1920x1080\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/13/gallery/adl_2021-03-11_23-09-54-thumbnail.png\" alt=\"\" width=\"768\" height=\"432\"></a>\n<figcaption>Managing versions</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://olinkirk.land/media/posts/13/gallery/chrome_2021-03-01_13-21-16.png\" data-size=\"984x734\"><img loading=\"lazy\" src=\"https://olinkirk.land/media/posts/13/gallery/chrome_2021-03-01_13-21-16-thumbnail.png\" alt=\"https://dribbble.com/shots/10090105-Dashboard-UI\" width=\"768\" height=\"573\"></a>\n<figcaption>UI Design Inspiration</figcaption>\n</figure>\n</div></div>\n<p>I've spent several evenings designing and writing the code for the different UI components in the launcher, and the style will carry over into the application itself.</p>",
            "image": "https://olinkirk.land/media/posts/13/adl_2021-03-11_23-15-00.png",
            "author": {
                "name": "Olin Kirkland"
            },
            "tags": [
                   "Worldmaker"
            ],
            "date_published": "2021-03-11T23:11:39+01:00",
            "date_modified": "2021-05-14T10:01:22+02:00"
        }
    ]
}
